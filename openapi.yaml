openapi: 3.1.0
info:
  title: Dingify Event Management
  description: API for managing users, their events, and projects.
  version: 1.0.0
servers:
  - url: https://api.dingify.workers.dev/api
    description: The production server.
security:
  - api_key: []
tags:
  - name: events
    description: Operations related to event management.
paths:
  /events:
    post:
      tags:
        - events
      operationId: create
      summary: Log a new event
      description: Logs a new event for a user in a specified channel.
      requestBody:
        description: Details of the event to log.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventCreate"
      responses:
        "201":
          description: Event logged successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventResponse"
        "400":
          description: Invalid input data.
        "401":
          description: API key is required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        "404":
          description: Channel or project not found.
    get:
      tags:
        - events
      operationId: getEvents
      summary: Retrieve all events
      description: Retrieves all logged events that the user has access to.
      responses:
        "200":
          description: List of events retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventsResponse"
        "401":
          description: API key is required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
components:
  securitySchemes:
    api_key:
      type: apiKey
      name: X-API-KEY
      in: header
  schemas:
    EventResponse:
      type: object
      properties:
        ok:
          type: boolean
          example: true
        message:
          type: string
          example: Event logged!
        event:
          $ref: "#/components/schemas/Event"
    Event:
      type: object
      properties:
        id:
          type: string
          description: The ID of the event.
          example: clwj5o92a0001adaz8mcbxqja
        name:
          type: string
          description: The name of the event.
          example: You got a new payment
        channelId:
          type: string
          description: The ID of the channel associated with the event.
          example: new-channel-name
        userId:
          type: string
          description: The ID of the user associated with the event.
          example: user-999
        icon:
          type: string
          description: An optional icon for visual representation of the event.
          example: icon_event.png
        notify:
          type: boolean
          description: Flag indicating whether users should be notified about the event.
          example: true
        tags:
          type: object
          additionalProperties:
            type: string
          description: Tags providing additional context or categorization for the event.
          example:
            Networking: Yes
            Tech: Yes
        createdAt:
          type: string
          format: date-time
          description: The timestamp when the event was created.
          example: 2024-05-23T11:14:27.682Z
      required:
        - id
        - name
        - channelId
        - userId
        - icon
        - notify
        - createdAt
    EventCreate:
      type: object
      properties:
        name:
          type: string
          description: The name of the event.
          example: You got a new payment
        channel:
          type: string
          description: The channel name where the event is registered.
          example: new-channel-name
        userId:
          type: string
          description: The ID of the user associated with the event.
          example: user-999
        icon:
          type: string
          description: An optional icon representing the event.
          example: ðŸŽ‰
        notify:
          type: boolean
          description: Whether to notify users about the event.
          example: true
        tags:
          type: object
          additionalProperties:
            type: string
          description: Additional tags providing context for the event.
          example:
            plan: premium
            cycle: monthly
      required:
        - name
        - channel
        - notify
        - userId
    EventsResponse:
      type: object
      properties:
        ok:
          type: boolean
          example: true
        events:
          type: array
          items:
            $ref: "#/components/schemas/Event"
    UnauthorizedError:
      required:
        - ok
        - message
      type: object
      properties:
        ok:
          type: boolean
          example: false
        message:
          type: string
          example: API key is required
